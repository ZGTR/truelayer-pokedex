# serverless.yml
service: serverless-flask

plugins:
  - serverless-domain-manager
  - serverless-python-requirements
  - serverless-wsgi
  - serverless-deployment-bucket
  - serverless-offline

# exclude the code coverage files and circle ci files
package:
  exclude: ${file(${self:custom.config_folder}/slsignore.yml)}

custom:
  serverless-offline:
    noPrependStageInUrl: false

  config_folder: './.serverless-config'
  rcsDeletePolicies:
    prod: Retain
    staging: Retain
    dev: Retain
    prod-rcs: Retain
    staging-rcs: Retain
    dev-rcs: Retain
    test-rcs: Retain
    prod-api: Retain
    staging-api: Retain
    dev-api: Retain
    local: Retain

  domains:
    prod-api: api.truelayer-pokedex.com
    staging-api: staging-api.truelayer-pokedex.com
    dev-api: dev-api.truelayer-pokedex.com
    test-api: localhost:3000
    local-api: localhost:3000

  customDomain:
    basePath: ''
    domainName: ${self:custom.domains.${self:provider.stage}}
    stage: ${self:provider.stage}
    createRoute53Record: true

  deploymentBucket:
    versioning: true

  wsgi: ${file(${self:custom.config_folder}/wsgi.yml)}

  pythonRequirements:
    dockerizePip: non-linux

  stage: ${opt:stage, self:provider.stage}
  authorizer: ${file(${self:custom.config_folder}/authorizer.yml)}

functions: ${file(${self:custom.config_folder}/functions.yml)}

provider:
  deploymentBucket:
    name: com.serverless.${self:provider.region}.${self:provider.stage}.deploys
  deploymentPrefix: serverless

  name: aws
  timeout: 15 # Default is 6
  runtime: python3.7
  stage: ${opt:stage}
  region: eu-west-2

  environment:
    stage: ${self:provider.stage}
